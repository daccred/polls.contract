/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Akwukwo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Akwukwo__factory>;
    getContractFactory(
      name: "ERC721ABurnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ABurnable__factory>;
    getContractFactory(
      name: "ERC721AOwnersExplicit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AOwnersExplicit__factory>;
    getContractFactory(
      name: "ERC721AQueryable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AQueryable__factory>;
    getContractFactory(
      name: "IERC721ABurnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ABurnable__factory>;
    getContractFactory(
      name: "IERC721AQueryable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721AQueryable__factory>;
    getContractFactory(
      name: "INN",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INN__factory>;
    getContractFactory(
      name: "Authority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Authority__factory>;
    getContractFactory(
      name: "ERC721ABurnableMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ABurnableMock__factory>;
    getContractFactory(
      name: "ERC721ABurnableOwnersExplicitMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ABurnableOwnersExplicitMock__factory>;
    getContractFactory(
      name: "ERC721ABurnableStartTokenIdMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ABurnableStartTokenIdMock__factory>;
    getContractFactory(
      name: "ERC721AGasReporterMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AGasReporterMock__factory>;
    getContractFactory(
      name: "ERC721AMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AMock__factory>;
    getContractFactory(
      name: "ERC721AOwnersExplicitMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AOwnersExplicitMock__factory>;
    getContractFactory(
      name: "ERC721AOwnersExplicitStartTokenIdMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AOwnersExplicitStartTokenIdMock__factory>;
    getContractFactory(
      name: "ERC721AQueryableMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AQueryableMock__factory>;
    getContractFactory(
      name: "ERC721AQueryableOwnersExplicitMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AQueryableOwnersExplicitMock__factory>;
    getContractFactory(
      name: "ERC721AQueryableStartTokenIdMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AQueryableStartTokenIdMock__factory>;
    getContractFactory(
      name: "ERC721AStartTokenIdMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AStartTokenIdMock__factory>;
    getContractFactory(
      name: "ERC721ReceiverMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ReceiverMock__factory>;
    getContractFactory(
      name: "StartTokenIdHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StartTokenIdHelper__factory>;
    getContractFactory(
      name: "Nnata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Nnata__factory>;
    getContractFactory(
      name: "Onuahia",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Onuahia__factory>;
    getContractFactory(
      name: "AuthProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AuthProxy__factory>;
    getContractFactory(
      name: "SendValue",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SendValue__factory>;
    getContractFactory(
      name: "Auth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Auth__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;

    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Akwukwo",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Akwukwo>;
    getContractAt(
      name: "ERC721ABurnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ABurnable>;
    getContractAt(
      name: "ERC721AOwnersExplicit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AOwnersExplicit>;
    getContractAt(
      name: "ERC721AQueryable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AQueryable>;
    getContractAt(
      name: "IERC721ABurnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ABurnable>;
    getContractAt(
      name: "IERC721AQueryable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721AQueryable>;
    getContractAt(
      name: "INN",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INN>;
    getContractAt(
      name: "Authority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Authority>;
    getContractAt(
      name: "ERC721ABurnableMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ABurnableMock>;
    getContractAt(
      name: "ERC721ABurnableOwnersExplicitMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ABurnableOwnersExplicitMock>;
    getContractAt(
      name: "ERC721ABurnableStartTokenIdMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ABurnableStartTokenIdMock>;
    getContractAt(
      name: "ERC721AGasReporterMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AGasReporterMock>;
    getContractAt(
      name: "ERC721AMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AMock>;
    getContractAt(
      name: "ERC721AOwnersExplicitMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AOwnersExplicitMock>;
    getContractAt(
      name: "ERC721AOwnersExplicitStartTokenIdMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AOwnersExplicitStartTokenIdMock>;
    getContractAt(
      name: "ERC721AQueryableMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AQueryableMock>;
    getContractAt(
      name: "ERC721AQueryableOwnersExplicitMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AQueryableOwnersExplicitMock>;
    getContractAt(
      name: "ERC721AQueryableStartTokenIdMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AQueryableStartTokenIdMock>;
    getContractAt(
      name: "ERC721AStartTokenIdMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AStartTokenIdMock>;
    getContractAt(
      name: "ERC721ReceiverMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ReceiverMock>;
    getContractAt(
      name: "StartTokenIdHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StartTokenIdHelper>;
    getContractAt(
      name: "Nnata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Nnata>;
    getContractAt(
      name: "Onuahia",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Onuahia>;
    getContractAt(
      name: "AuthProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AuthProxy>;
    getContractAt(
      name: "SendValue",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SendValue>;
    getContractAt(
      name: "Auth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Auth>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
