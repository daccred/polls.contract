/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Nnata, NnataInterface } from "../../contracts/Nnata";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "predictionOf",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015bb380380620015bb8339810160408190526200003491620001df565b8151620000499060029060208501906200006c565b5080516200005f9060039060208401906200006c565b5050600080555062000286565b8280546200007a9062000249565b90600052602060002090601f0160209004810192826200009e5760008555620000e9565b82601f10620000b957805160ff1916838001178555620000e9565b82800160010185558215620000e9579182015b82811115620000e9578251825591602001919060010190620000cc565b50620000f7929150620000fb565b5090565b5b80821115620000f75760008155600101620000fc565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013a57600080fd5b81516001600160401b038082111562000157576200015762000112565b604051601f8301601f19908116603f0116810190828211818310171562000182576200018262000112565b816040528381526020925086838588010111156200019f57600080fd5b600091505b83821015620001c35785820183015181830184015290820190620001a4565b83821115620001d55760008385830101525b9695505050505050565b60008060408385031215620001f357600080fd5b82516001600160401b03808211156200020b57600080fd5b620002198683870162000128565b935060208501519150808211156200023057600080fd5b506200023f8582860162000128565b9150509250929050565b600181811c908216806200025e57607f821691505b602082108114156200028057634e487b7160e01b600052602260045260246000fd5b50919050565b61132580620002966000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063c87b56dd11610066578063c87b56dd14610212578063e8a3d48514610225578063e985e9c51461022d578063f6fba19b1461026957600080fd5b806370a08231146101d157806395d89b41146101e4578063a22cb465146101ec578063b88d4fde146101ff57600080fd5b806318160ddd116100d357806318160ddd1461018257806323b872dd1461019857806342842e0e146101ab5780636352211e146101be57600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461016d575b600080fd5b610118610113366004610e30565b61027c565b60405190151581526020015b60405180910390f35b6101356102ce565b6040516101249190610ea5565b610155610150366004610eb8565b610360565b6040516001600160a01b039091168152602001610124565b61018061017b366004610eed565b6103a4565b005b600154600054035b604051908152602001610124565b6101806101a6366004610f17565b61042b565b6101806101b9366004610f17565b610436565b6101556101cc366004610eb8565b610451565b61018a6101df366004610f53565b610463565b6101356104b2565b6101806101fa366004610f6e565b6104c1565b61018061020d366004610fc0565b610557565b610135610220366004610eb8565b6105a1565b610135610638565b61011861023b36600461109c565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b61018a610277366004610eb8565b610678565b60006001600160e01b031982166380ac58cd60e01b14806102ad57506001600160e01b03198216635b5e139f60e01b145b806102c857506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102dd906110cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610309906110cf565b80156103565780601f1061032b57610100808354040283529160200191610356565b820191906000526020600020905b81548152906001019060200180831161033957829003601f168201915b5050505050905090565b600061036b8261068d565b610388576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006103af82610451565b9050806001600160a01b0316836001600160a01b031614156103e45760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b0382161461041b576103fe813361023b565b61041b576040516367d9dca160e11b815260040160405180910390fd5b6104268383836106b8565b505050565b610426838383610714565b61042683838360405180602001604052806000815250610557565b600061045c82610926565b5192915050565b60006001600160a01b03821661048c576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546102dd906110cf565b6001600160a01b0382163314156104eb5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610562848484610714565b6001600160a01b0383163b1561059b5761057e84848484610a5b565b61059b576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606105ac8261068d565b6105c957604051630a14c4b560e41b815260040160405180910390fd5b60006105d3610b52565b905060006105e2306014610b72565b90508151600014156106035760405180602001604052806000815250610630565b818161060e86610d19565b6040516020016106209392919061110a565b6040516020818303038152906040525b949350505050565b60606000610647306014610b72565b9050610651610b52565b8160405160200161066392919061115a565b60405160208183030381529060405291505090565b600061068382610926565b6060015192915050565b60008054821080156102c8575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061071f82610926565b60608101518151919250906001600160a01b038681169116146107545760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b03871614806107725750610772863361023b565b8061078d57503361078285610360565b6001600160a01b0316145b9050806107ad57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166107d457604051633a954ecd60e21b815260040160405180910390fd5b6107e0600085886106b8565b6001600160a01b038681166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255948a168085528285208054928316928716600101871692909217909155888452600490925290912080546001600160e01b0319168217600160a01b42909416939093029290921782551561087757600181018390555b60018501600081815260046020526040902080546001600160a01b03166108da5760005482146108da578054602087015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038b1617178155600181018590555b50505083856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b60408051608081018252600080825260208201819052918101829052606081019190915281600054811015610a4257600081815260046020908152604091829020825160808101845281546001600160a01b0381168252600160a01b810467ffffffffffffffff1693820193909352600160e01b90920460ff16151592820183905260010154606082015290610a405780516001600160a01b0316156109cd579392505050565b5060001901600081815260046020908152604091829020825160808101845281546001600160a01b038116808352600160a01b820467ffffffffffffffff1694830194909452600160e01b900460ff1615159381019390935260010154606083015215610a3b579392505050565b6109cd565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610a90903390899088908890600401611189565b602060405180830381600087803b158015610aaa57600080fd5b505af1925050508015610ada575060408051601f3d908101601f19168201909252610ad7918101906111c6565b60015b610b35573d808015610b08576040519150601f19603f3d011682016040523d82523d6000602084013e610b0d565b606091505b508051610b2d576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60606040518060600160405280602281526020016112ce60229139905090565b60606000610b818360026111f9565b610b8c906002611218565b67ffffffffffffffff811115610ba457610ba4610faa565b6040519080825280601f01601f191660200182016040528015610bce576020820181803683370190505b509050600360fc1b81600081518110610be957610be9611230565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610c1857610c18611230565b60200101906001600160f81b031916908160001a9053506000610c3c8460026111f9565b610c47906001611218565b90505b6001811115610cbf576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610c7b57610c7b611230565b1a60f81b828281518110610c9157610c91611230565b60200101906001600160f81b031916908160001a90535060049490941c93610cb881611246565b9050610c4a565b508315610d125760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b9392505050565b606081610d3d5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610d675780610d518161125d565b9150610d609050600a8361128e565b9150610d41565b60008167ffffffffffffffff811115610d8257610d82610faa565b6040519080825280601f01601f191660200182016040528015610dac576020820181803683370190505b5090505b841561063057610dc16001836112a2565b9150610dce600a866112b9565b610dd9906030611218565b60f81b818381518110610dee57610dee611230565b60200101906001600160f81b031916908160001a905350610e10600a8661128e565b9450610db0565b6001600160e01b031981168114610e2d57600080fd5b50565b600060208284031215610e4257600080fd5b8135610d1281610e17565b60005b83811015610e68578181015183820152602001610e50565b8381111561059b5750506000910152565b60008151808452610e91816020860160208601610e4d565b601f01601f19169290920160200192915050565b602081526000610d126020830184610e79565b600060208284031215610eca57600080fd5b5035919050565b80356001600160a01b0381168114610ee857600080fd5b919050565b60008060408385031215610f0057600080fd5b610f0983610ed1565b946020939093013593505050565b600080600060608486031215610f2c57600080fd5b610f3584610ed1565b9250610f4360208501610ed1565b9150604084013590509250925092565b600060208284031215610f6557600080fd5b610d1282610ed1565b60008060408385031215610f8157600080fd5b610f8a83610ed1565b915060208301358015158114610f9f57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610fd657600080fd5b610fdf85610ed1565b9350610fed60208601610ed1565b925060408501359150606085013567ffffffffffffffff8082111561101157600080fd5b818701915087601f83011261102557600080fd5b81358181111561103757611037610faa565b604051601f8201601f19908116603f0116810190838211818310171561105f5761105f610faa565b816040528281528a602084870101111561107857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156110af57600080fd5b6110b883610ed1565b91506110c660208401610ed1565b90509250929050565b600181811c908216806110e357607f821691505b6020821081141561110457634e487b7160e01b600052602260045260246000fd5b50919050565b6000845161111c818460208901610e4d565b845190830190611130818360208901610e4d565b602f60f81b9101908152835161114d816001840160208801610e4d565b0160010195945050505050565b6000835161116c818460208801610e4d565b835190830190611180818360208801610e4d565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111bc90830184610e79565b9695505050505050565b6000602082840312156111d857600080fd5b8151610d1281610e17565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611213576112136111e3565b500290565b6000821982111561122b5761122b6111e3565b500190565b634e487b7160e01b600052603260045260246000fd5b600081611255576112556111e3565b506000190190565b6000600019821415611271576112716111e3565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261129d5761129d611278565b500490565b6000828210156112b4576112b46111e3565b500390565b6000826112c8576112c8611278565b50069056fe68747470733a2f2f6e66742e62626e706f6c6c732e78797a2f6170692f6d6574612fa2646970667358221220ebf9f6c6b7d8ce0b1d3592e22e25accdb2d7d28879455e6a16782a6fad2df77364736f6c63430008090033";

type NnataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NnataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Nnata__factory extends ContractFactory {
  constructor(...args: NnataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Nnata> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<Nnata>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): Nnata {
    return super.attach(address) as Nnata;
  }
  override connect(signer: Signer): Nnata__factory {
    return super.connect(signer) as Nnata__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NnataInterface {
    return new utils.Interface(_abi) as NnataInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Nnata {
    return new Contract(address, _abi, signerOrProvider) as Nnata;
  }
}
