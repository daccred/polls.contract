/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721AOwnersExplicitMock,
  ERC721AOwnersExplicitMockInterface,
} from "../../../contracts/mocks/ERC721AOwnersExplicitMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AllOwnershipsHaveBeenSet",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTokensMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "QuantityMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getOwnershipAt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "prediction",
            type: "bytes32",
          },
        ],
        internalType: "struct INN.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextOwnerToExplicitlySet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "predictionOf",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "setOwnersExplicit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a6138038062001a6183398101604081905262000034916200021a565b8151829082906200004d906002906020850190620000a7565b50805162000063906003906020840190620000a7565b5060008055505060405169383932b234b1ba34b7b760b11b6020820152602a01604051602081830303815290604052805190602001206009819055505050620002c1565b828054620000b59062000284565b90600052602060002090601f016020900481019282620000d9576000855562000124565b82601f10620000f457805160ff191683800117855562000124565b8280016001018555821562000124579182015b828111156200012457825182559160200191906001019062000107565b506200013292915062000136565b5090565b5b8082111562000132576000815560010162000137565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200017557600080fd5b81516001600160401b03808211156200019257620001926200014d565b604051601f8301601f19908116603f01168101908282118183101715620001bd57620001bd6200014d565b81604052838152602092508683858801011115620001da57600080fd5b600091505b83821015620001fe5785820183015181830184015290820190620001df565b83821115620002105760008385830101525b9695505050505050565b600080604083850312156200022e57600080fd5b82516001600160401b03808211156200024657600080fd5b620002548683870162000163565b935060208501519150808211156200026b57600080fd5b506200027a8582860162000163565b9150509250929050565b600181811c908216806200029957607f821691505b60208210811415620002bb57634e487b7160e01b600052602260045260246000fd5b50919050565b61179080620002d16000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806395d89b41116100ad578063d7224ba011610071578063d7224ba014610277578063e8a3d48514610280578063e985e9c514610288578063f2523633146102c4578063f6fba19b146103a157600080fd5b806395d89b4114610223578063a14481941461022b578063a22cb4651461023e578063b88d4fde14610251578063c87b56dd1461026457600080fd5b806323b872dd116100f457806323b872dd146101c45780632d20fb60146101d757806342842e0e146101ea5780636352211e146101fd57806370a082311461021057600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806318160ddd146101ae575b600080fd5b61014461013f36600461129b565b6103b4565b60405190151581526020015b60405180910390f35b610161610406565b6040516101509190611310565b61018161017c366004611323565b610498565b6040516001600160a01b039091168152602001610150565b6101ac6101a7366004611358565b6104dc565b005b600154600054035b604051908152602001610150565b6101ac6101d2366004611382565b610563565b6101ac6101e5366004611323565b61056e565b6101ac6101f8366004611382565b61057a565b61018161020b366004611323565b610595565b6101b661021e3660046113be565b6105a7565b6101616105f6565b6101ac610239366004611358565b610605565b6101ac61024c3660046113d9565b610616565b6101ac61025f36600461142b565b6106ac565b610161610272366004611323565b6106f6565b6101b660085481565b61016161078d565b610144610296366004611507565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6103596102d2366004611323565b60408051608081018252600080825260208201819052918101829052606081019190915250600090815260046020908152604091829020825160808101845281546001600160a01b0381168252600160a01b810467ffffffffffffffff1693820193909352600160e01b90920460ff16151592820192909252600190910154606082015290565b604051610150919081516001600160a01b0316815260208083015167ffffffffffffffff16908201526040808301511515908201526060918201519181019190915260800190565b6101b66103af366004611323565b6107cd565b60006001600160e01b031982166380ac58cd60e01b14806103e557506001600160e01b03198216635b5e139f60e01b145b8061040057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546104159061153a565b80601f01602080910402602001604051908101604052809291908181526020018280546104419061153a565b801561048e5780601f106104635761010080835404028352916020019161048e565b820191906000526020600020905b81548152906001019060200180831161047157829003601f168201915b5050505050905090565b60006104a3826107e2565b6104c0576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006104e782610595565b9050806001600160a01b0316836001600160a01b0316141561051c5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b03821614610553576105368133610296565b610553576040516367d9dca160e11b815260040160405180910390fd5b61055e83838361080d565b505050565b61055e838383610869565b61057781610a7b565b50565b61055e838383604051806020016040528060008152506106ac565b60006105a082610bb3565b5192915050565b60006001600160a01b0382166105d0576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546104159061153a565b6106128282600954610ce8565b5050565b6001600160a01b0382163314156106405760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106b7848484610869565b6001600160a01b0383163b156106f0576106d384848484610d03565b6106f0576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6060610701826107e2565b61071e57604051630a14c4b560e41b815260040160405180910390fd5b6000610728610dfa565b90506000610737306014610e1a565b90508151600014156107585760405180602001604052806000815250610785565b818161076386610fc1565b60405160200161077593929190611575565b6040516020818303038152906040525b949350505050565b6060600061079c306014610e1a565b90506107a6610dfa565b816040516020016107b89291906115c5565b60405160208183030381529060405291505090565b60006107d882610bb3565b6060015192915050565b6000805482108015610400575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061087482610bb3565b60608101518151919250906001600160a01b038681169116146108a95760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b03871614806108c757506108c78633610296565b806108e25750336108d785610498565b6001600160a01b0316145b90508061090257604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661092957604051633a954ecd60e21b815260040160405180910390fd5b6109356000858861080d565b6001600160a01b038681166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255948a168085528285208054928316928716600101871692909217909155888452600490925290912080546001600160e01b0319168217600160a01b4290941693909302929092178255156109cc57600181018390555b60018501600081815260046020526040902080546001600160a01b0316610a2f576000548214610a2f578054602087015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038b1617178155600181018590555b50505083856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b80610a99576040516356be441560e01b815260040160405180910390fd5b600054610ab95760405163c0367cab60e01b815260040160405180910390fd5b60085480610ac5575060005b6000548110610ae7576040516370e89b1b60e01b815260040160405180910390fd5b6000548282016000198101911015610b025750600054600019015b815b818111610ba8576000818152600460205260409020546001600160a01b0316158015610b465750600081815260046020526040902054600160e01b900460ff16155b15610ba0576000610b5682610bb3565b805160008481526004602090815260409091208054919093015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b0390921691909117179055505b600101610b04565b506001016008555050565b60408051608081018252600080825260208201819052918101829052606081019190915281600054811015610ccf57600081815260046020908152604091829020825160808101845281546001600160a01b0381168252600160a01b810467ffffffffffffffff1693820193909352600160e01b90920460ff16151592820183905260010154606082015290610ccd5780516001600160a01b031615610c5a579392505050565b5060001901600081815260046020908152604091829020825160808101845281546001600160a01b038116808352600160a01b820467ffffffffffffffff1694830194909452600160e01b900460ff1615159381019390935260010154606083015215610cc8579392505050565b610c5a565b505b604051636f96cda160e11b815260040160405180910390fd5b61055e838383604051806020016040528060008152506110bf565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610d389033908990889088906004016115f4565b602060405180830381600087803b158015610d5257600080fd5b505af1925050508015610d82575060408051601f3d908101601f19168201909252610d7f91810190611631565b60015b610ddd573d808015610db0576040519150601f19603f3d011682016040523d82523d6000602084013e610db5565b606091505b508051610dd5576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060405180606001604052806022815260200161173960229139905090565b60606000610e29836002611664565b610e34906002611683565b67ffffffffffffffff811115610e4c57610e4c611415565b6040519080825280601f01601f191660200182016040528015610e76576020820181803683370190505b509050600360fc1b81600081518110610e9157610e9161169b565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610ec057610ec061169b565b60200101906001600160f81b031916908160001a9053506000610ee4846002611664565b610eef906001611683565b90505b6001811115610f67576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610f2357610f2361169b565b1a60f81b828281518110610f3957610f3961169b565b60200101906001600160f81b031916908160001a90535060049490941c93610f60816116b1565b9050610ef2565b508315610fba5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b9392505050565b606081610fe55750506040805180820190915260018152600360fc1b602082015290565b8160005b811561100f5780610ff9816116c8565b91506110089050600a836116f9565b9150610fe9565b60008167ffffffffffffffff81111561102a5761102a611415565b6040519080825280601f01601f191660200182016040528015611054576020820181803683370190505b5090505b84156107855761106960018361170d565b9150611076600a86611724565b611081906030611683565b60f81b8183815181106110965761109661169b565b60200101906001600160f81b031916908160001a9053506110b8600a866116f9565b9450611058565b6000546001600160a01b0385166110e857604051622e076360e81b815260040160405180910390fd5b836111065760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038516600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168c0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168c01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b42909316929092029190911781556001018490558190818601903b15611235575b60405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46111fe6000888480600101955087610d03565b61121b576040516368d2bf6b60e11b815260040160405180910390fd5b8082106111b357826000541461123057600080fd5b61127a565b5b6040516001830192906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4808210611236575b506000555050505050565b6001600160e01b03198116811461057757600080fd5b6000602082840312156112ad57600080fd5b8135610fba81611285565b60005b838110156112d35781810151838201526020016112bb565b838111156106f05750506000910152565b600081518084526112fc8160208601602086016112b8565b601f01601f19169290920160200192915050565b602081526000610fba60208301846112e4565b60006020828403121561133557600080fd5b5035919050565b80356001600160a01b038116811461135357600080fd5b919050565b6000806040838503121561136b57600080fd5b6113748361133c565b946020939093013593505050565b60008060006060848603121561139757600080fd5b6113a08461133c565b92506113ae6020850161133c565b9150604084013590509250925092565b6000602082840312156113d057600080fd5b610fba8261133c565b600080604083850312156113ec57600080fd5b6113f58361133c565b91506020830135801515811461140a57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561144157600080fd5b61144a8561133c565b93506114586020860161133c565b925060408501359150606085013567ffffffffffffffff8082111561147c57600080fd5b818701915087601f83011261149057600080fd5b8135818111156114a2576114a2611415565b604051601f8201601f19908116603f011681019083821181831017156114ca576114ca611415565b816040528281528a60208487010111156114e357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561151a57600080fd5b6115238361133c565b91506115316020840161133c565b90509250929050565b600181811c9082168061154e57607f821691505b6020821081141561156f57634e487b7160e01b600052602260045260246000fd5b50919050565b600084516115878184602089016112b8565b84519083019061159b8183602089016112b8565b602f60f81b910190815283516115b88160018401602088016112b8565b0160010195945050505050565b600083516115d78184602088016112b8565b8351908301906115eb8183602088016112b8565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611627908301846112e4565b9695505050505050565b60006020828403121561164357600080fd5b8151610fba81611285565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561167e5761167e61164e565b500290565b600082198211156116965761169661164e565b500190565b634e487b7160e01b600052603260045260246000fd5b6000816116c0576116c061164e565b506000190190565b60006000198214156116dc576116dc61164e565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611708576117086116e3565b500490565b60008282101561171f5761171f61164e565b500390565b600082611733576117336116e3565b50069056fe68747470733a2f2f6e66742e62626e706f6c6c732e78797a2f6170692f6d6574612fa2646970667358221220996036ff481591bb1433e8a029491b458eb0d7a4fdd18ab846dd60bda4dd703d64736f6c63430008090033";

type ERC721AOwnersExplicitMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AOwnersExplicitMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721AOwnersExplicitMock__factory extends ContractFactory {
  constructor(...args: ERC721AOwnersExplicitMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721AOwnersExplicitMock> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ERC721AOwnersExplicitMock>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721AOwnersExplicitMock {
    return super.attach(address) as ERC721AOwnersExplicitMock;
  }
  override connect(signer: Signer): ERC721AOwnersExplicitMock__factory {
    return super.connect(signer) as ERC721AOwnersExplicitMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AOwnersExplicitMockInterface {
    return new utils.Interface(_abi) as ERC721AOwnersExplicitMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AOwnersExplicitMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721AOwnersExplicitMock;
  }
}
