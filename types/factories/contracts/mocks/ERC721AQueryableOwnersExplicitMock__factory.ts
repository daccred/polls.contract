/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721AQueryableOwnersExplicitMock,
  ERC721AQueryableOwnersExplicitMockInterface,
} from "../../../contracts/mocks/ERC721AQueryableOwnersExplicitMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AllOwnershipsHaveBeenSet",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQueryRange",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTokensMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "QuantityMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "explicitOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "prediction",
            type: "bytes32",
          },
        ],
        internalType: "struct INN.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "explicitOwnershipsOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "prediction",
            type: "bytes32",
          },
        ],
        internalType: "struct INN.TokenOwnership[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getOwnershipAt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "prediction",
            type: "bytes32",
          },
        ],
        internalType: "struct INN.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextOwnerToExplicitlySet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "predictionOf",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "setOwnersExplicit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stop",
        type: "uint256",
      },
    ],
    name: "tokensOfOwnerIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022f0380380620022f083398101604081905262000034916200021f565b81818181816002908051906020019062000050929190620000ac565b50805162000066906003906020840190620000ac565b5060008055505060405169383932b234b1ba34b7b760b11b6020820152602a016040516020818303038152906040528051906020012060088190555050505050620002c6565b828054620000ba9062000289565b90600052602060002090601f016020900481019282620000de576000855562000129565b82601f10620000f957805160ff191683800117855562000129565b8280016001018555821562000129579182015b82811115620001295782518255916020019190600101906200010c565b50620001379291506200013b565b5090565b5b808211156200013757600081556001016200013c565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200017a57600080fd5b81516001600160401b038082111562000197576200019762000152565b604051601f8301601f19908116603f01168101908282118183101715620001c257620001c262000152565b81604052838152602092508683858801011115620001df57600080fd5b600091505b83821015620002035785820183015181830184015290820190620001e4565b83821115620002155760008385830101525b9695505050505050565b600080604083850312156200023357600080fd5b82516001600160401b03808211156200024b57600080fd5b620002598683870162000168565b935060208501519150808211156200027057600080fd5b506200027f8582860162000168565b9150509250929050565b600181811c908216806200029e57607f821691505b60208210811415620002c057634e487b7160e01b600052602260045260246000fd5b50919050565b61201a80620002d66000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638462151c116100de578063c23dc68f11610097578063e8a3d48511610071578063e8a3d4851461034d578063e985e9c514610355578063f252363314610368578063f6fba19b146103fc57600080fd5b8063c23dc68f14610311578063c87b56dd14610331578063d7224ba01461034457600080fd5b80638462151c1461029d57806395d89b41146102bd57806399a2557a146102c5578063a1448194146102d8578063a22cb465146102eb578063b88d4fde146102fe57600080fd5b80632d20fb60116101305780632d20fb601461021e57806342842e0e1461023157806342966c68146102445780635bbb2177146102575780636352211e1461027757806370a082311461028a57600080fd5b806301ffc9a71461017857806306fdde03146101a0578063081812fc146101b5578063095ea7b3146101e057806318160ddd146101f557806323b872dd1461020b575b600080fd5b61018b61018636600461195b565b61040f565b60405190151581526020015b60405180910390f35b6101a8610461565b60405161019791906119d0565b6101c86101c33660046119e3565b6104f3565b6040516001600160a01b039091168152602001610197565b6101f36101ee366004611a18565b610537565b005b600154600054035b604051908152602001610197565b6101f3610219366004611a42565b6105be565b6101f361022c3660046119e3565b6105c9565b6101f361023f366004611a42565b6105d5565b6101f36102523660046119e3565b6105f0565b61026a610265366004611ac4565b6105fb565b6040516101979190611ba0565b6101c86102853660046119e3565b6106c8565b6101fd610298366004611be2565b6106da565b6102b06102ab366004611be2565b610728565b6040516101979190611bfd565b6101a8610885565b6102b06102d3366004611c35565b610894565b6101f36102e6366004611a18565b610a55565b6101f36102f9366004611c68565b610a66565b6101f361030c366004611ca4565b610afc565b61032461031f3660046119e3565b610b46565b6040516101979190611d63565b6101a861033f3660046119e3565b610c0c565b6101fd60095481565b6101a8610ca3565b61018b610363366004611d71565b610ce3565b6103246103763660046119e3565b60408051608081018252600080825260208201819052918101829052606081019190915250600090815260046020908152604091829020825160808101845281546001600160a01b0381168252600160a01b81046001600160401b031693820193909352600160e01b90920460ff16151592820192909252600190910154606082015290565b6101fd61040a3660046119e3565b610d11565b60006001600160e01b031982166380ac58cd60e01b148061044057506001600160e01b03198216635b5e139f60e01b145b8061045b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461047090611da4565b80601f016020809104026020016040519081016040528092919081815260200182805461049c90611da4565b80156104e95780601f106104be576101008083540402835291602001916104e9565b820191906000526020600020905b8154815290600101906020018083116104cc57829003601f168201915b5050505050905090565b60006104fe82610d26565b61051b576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b6000610542826106c8565b9050806001600160a01b0316836001600160a01b031614156105775760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216146105ae576105918133610ce3565b6105ae576040516367d9dca160e11b815260040160405180910390fd5b6105b9838383610d51565b505050565b6105b9838383610dad565b6105d281610fab565b50565b6105b983838360405180602001604052806000815250610afc565b6105d28160016110e2565b80516060906000816001600160401b0381111561061a5761061a611a7e565b60405190808252806020026020018201604052801561066c57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816106385790505b50905060005b8281146106c05761069b85828151811061068e5761068e611ddf565b6020026020010151610b46565b8282815181106106ad576106ad611ddf565b6020908102919091010152600101610672565b509392505050565b60006106d3826112a3565b5192915050565b60006001600160a01b038216610703576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b60606000806000610738856106da565b90506000816001600160401b0381111561075457610754611a7e565b60405190808252806020026020018201604052801561077d578160200160208202803683370190505b5090506107aa60408051608081018252600080825260208201819052918101829052606081019190915290565b60005b83861461087957600081815260046020908152604091829020825160808101845281546001600160a01b0381168252600160a01b81046001600160401b031693820193909352600160e01b90920460ff1615801593830193909352600101546060820152925061081c57610871565b81516001600160a01b03161561083157815194505b876001600160a01b0316856001600160a01b03161415610871578083878060010198508151811061086457610864611ddf565b6020026020010181815250505b6001016107ad565b50909695505050505050565b60606003805461047090611da4565b60608183106108b657604051631960ccad60e11b815260040160405180910390fd5b60008054808411156108c6578093505b60006108d1876106da565b9050848610156108f057858503818110156108ea578091505b506108f4565b5060005b6000816001600160401b0381111561090e5761090e611a7e565b604051908082528060200260200182016040528015610937578160200160208202803683370190505b5090508161094a579350610a4e92505050565b600061095588610b46565b905060008160400151610966575080515b885b8881141580156109785750848714155b15610a4257600081815260046020908152604091829020825160808101845281546001600160a01b0381168252600160a01b81046001600160401b031693820193909352600160e01b90920460ff161580159383019390935260010154606082015293506109e557610a3a565b82516001600160a01b0316156109fa57825191505b8a6001600160a01b0316826001600160a01b03161415610a3a5780848880600101995081518110610a2d57610a2d611ddf565b6020026020010181815250505b600101610968565b50505092835250909150505b9392505050565b610a6282826008546113d6565b5050565b6001600160a01b038216331415610a905760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610b07848484610dad565b6001600160a01b0383163b15610b4057610b23848484846113f1565b610b40576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6040805160808082018352600080835260208084018290528385018290526060808501839052855193840186528284529083018290529382018190529281018390529091506000548310610b9a5792915050565b50600082815260046020908152604091829020825160808101845281546001600160a01b0381168252600160a01b81046001600160401b031693820193909352600160e01b90920460ff161580159383019390935260010154606082015290610c035792915050565b610a4e836112a3565b6060610c1782610d26565b610c3457604051630a14c4b560e41b815260040160405180910390fd5b6000610c3e6114e8565b90506000610c4d306014611508565b9050815160001415610c6e5760405180602001604052806000815250610c9b565b8181610c79866116a7565b604051602001610c8b93929190611df5565b6040516020818303038152906040525b949350505050565b60606000610cb2306014611508565b9050610cbc6114e8565b81604051602001610cce929190611e45565b60405160208183030381529060405291505090565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6000610d1c826112a3565b6060015192915050565b600080548210801561045b575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000610db8826112a3565b60608101518151919250906001600160a01b03868116911614610ded5760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0387161480610e0b5750610e0b8633610ce3565b80610e26575033610e1b856104f3565b6001600160a01b0316145b905080610e4657604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610e6d57604051633a954ecd60e21b815260040160405180910390fd5b610e7960008588610d51565b6001600160a01b038681166000908152600560209081526040808320805467ffffffffffffffff198082166001600160401b0392831660001901831617909255948a168085528285208054928316928716600101871692909217909155888452600490925290912080546001600160e01b0319168217600160a01b429094169390930292909217825515610f0f57600181018390555b60018501600081815260046020526040902080546001600160a01b0316610f71576000548214610f7157805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038b1617178155600181018590555b50505083856001600160a01b0316876001600160a01b0316600080516020611fc583398151915260405160405180910390a4505050505050565b80610fc9576040516356be441560e01b815260040160405180910390fd5b600054610fe95760405163c0367cab60e01b815260040160405180910390fd5b60095480610ff5575060005b6000548110611017576040516370e89b1b60e01b815260040160405180910390fd5b60005482820160001981019110156110325750600054600019015b815b8181116110d7576000818152600460205260409020546001600160a01b03161580156110765750600081815260046020526040902054600160e01b900460ff16155b156110cf576000611086826112a3565b80516000848152600460209081526040909120805491909301516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b0390921691909117179055505b600101611034565b506001016009555050565b60006110ed836112a3565b60608101518151919250908315611159576000336001600160a01b038316148061111c575061111c8233610ce3565b8061113757503361112c876104f3565b6001600160a01b0316145b90508061115757604051632ce44b5f60e11b815260040160405180910390fd5b505b61116560008683610d51565b6001600160a01b0380821660008181526005602090815260408083208054600160801b6000196001600160401b0380841691909101811667ffffffffffffffff198416811783900482166001908101831690930277ffffffffffffffff0000000000000000ffffffffffffffff19909416179290921783558c86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918a0180845292208054919490911661126a57600054821461126a57805460208801516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b03871617178155600181018690555b5050604051879250600091506001600160a01b03841690600080516020611fc5833981519152908390a450506001805481019055505050565b604080516080810182526000808252602082018190529181018290526060810191909152816000548110156113bd57600081815260046020908152604091829020825160808101845281546001600160a01b0381168252600160a01b81046001600160401b031693820193909352600160e01b90920460ff161515928201839052600101546060820152906113bb5780516001600160a01b031615611349579392505050565b5060001901600081815260046020908152604091829020825160808101845281546001600160a01b038116808352600160a01b82046001600160401b031694830194909452600160e01b900460ff16151593810193909352600101546060830152156113b6579392505050565b611349565b505b604051636f96cda160e11b815260040160405180910390fd5b6105b9838383604051806020016040528060008152506117a4565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611426903390899088908890600401611e74565b602060405180830381600087803b15801561144057600080fd5b505af1925050508015611470575060408051601f3d908101601f1916820190925261146d91810190611eb1565b60015b6114cb573d80801561149e576040519150601f19603f3d011682016040523d82523d6000602084013e6114a3565b606091505b5080516114c3576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b6060604051806060016040528060228152602001611fa360229139905090565b60606000611517836002611ee4565b611522906002611f03565b6001600160401b0381111561153957611539611a7e565b6040519080825280601f01601f191660200182016040528015611563576020820181803683370190505b509050600360fc1b8160008151811061157e5761157e611ddf565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106115ad576115ad611ddf565b60200101906001600160f81b031916908160001a90535060006115d1846002611ee4565b6115dc906001611f03565b90505b6001811115611654576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061161057611610611ddf565b1a60f81b82828151811061162657611626611ddf565b60200101906001600160f81b031916908160001a90535060049490941c9361164d81611f1b565b90506115df565b508315610a4e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b6060816116cb5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156116f557806116df81611f32565b91506116ee9050600a83611f63565b91506116cf565b6000816001600160401b0381111561170f5761170f611a7e565b6040519080825280601f01601f191660200182016040528015611739576020820181803683370190505b5090505b8415610c9b5761174e600183611f77565b915061175b600a86611f8e565b611766906030611f03565b60f81b81838151811061177b5761177b611ddf565b60200101906001600160f81b031916908160001a90535061179d600a86611f63565b945061173d565b6000546001600160a01b0385166117cd57604051622e076360e81b815260040160405180910390fd5b836117eb5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038516600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff1981166001600160401b038083168c0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168c01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b42909316929092029190911781556001018490558190818601903b15611907575b60405182906001600160a01b03891690600090600080516020611fc5833981519152908290a46118d060008884806001019550876113f1565b6118ed576040516368d2bf6b60e11b815260040160405180910390fd5b80821061189757826000541461190257600080fd5b61193a565b5b6040516001830192906001600160a01b03891690600090600080516020611fc5833981519152908290a4808210611908575b506000555050505050565b6001600160e01b0319811681146105d257600080fd5b60006020828403121561196d57600080fd5b8135610a4e81611945565b60005b8381101561199357818101518382015260200161197b565b83811115610b405750506000910152565b600081518084526119bc816020860160208601611978565b601f01601f19169290920160200192915050565b602081526000610a4e60208301846119a4565b6000602082840312156119f557600080fd5b5035919050565b80356001600160a01b0381168114611a1357600080fd5b919050565b60008060408385031215611a2b57600080fd5b611a34836119fc565b946020939093013593505050565b600080600060608486031215611a5757600080fd5b611a60846119fc565b9250611a6e602085016119fc565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611abc57611abc611a7e565b604052919050565b60006020808385031215611ad757600080fd5b82356001600160401b0380821115611aee57600080fd5b818501915085601f830112611b0257600080fd5b813581811115611b1457611b14611a7e565b8060051b9150611b25848301611a94565b8181529183018401918481019088841115611b3f57600080fd5b938501935b83851015611b5d57843582529385019390850190611b44565b98975050505050505050565b80516001600160a01b031682526020808201516001600160401b031690830152604080820151151590830152606090810151910152565b6020808252825182820181905260009190848201906040850190845b8181101561087957611bcf838551611b69565b9284019260809290920191600101611bbc565b600060208284031215611bf457600080fd5b610a4e826119fc565b6020808252825182820181905260009190848201906040850190845b8181101561087957835183529284019291840191600101611c19565b600080600060608486031215611c4a57600080fd5b611c53846119fc565b95602085013595506040909401359392505050565b60008060408385031215611c7b57600080fd5b611c84836119fc565b915060208301358015158114611c9957600080fd5b809150509250929050565b60008060008060808587031215611cba57600080fd5b611cc3856119fc565b93506020611cd28187016119fc565b93506040860135925060608601356001600160401b0380821115611cf557600080fd5b818801915088601f830112611d0957600080fd5b813581811115611d1b57611d1b611a7e565b611d2d601f8201601f19168501611a94565b91508082528984828501011115611d4357600080fd5b808484018584013760008482840101525080935050505092959194509250565b6080810161045b8284611b69565b60008060408385031215611d8457600080fd5b611d8d836119fc565b9150611d9b602084016119fc565b90509250929050565b600181811c90821680611db857607f821691505b60208210811415611dd957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60008451611e07818460208901611978565b845190830190611e1b818360208901611978565b602f60f81b91019081528351611e38816001840160208801611978565b0160010195945050505050565b60008351611e57818460208801611978565b835190830190611e6b818360208801611978565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611ea7908301846119a4565b9695505050505050565b600060208284031215611ec357600080fd5b8151610a4e81611945565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611efe57611efe611ece565b500290565b60008219821115611f1657611f16611ece565b500190565b600081611f2a57611f2a611ece565b506000190190565b6000600019821415611f4657611f46611ece565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611f7257611f72611f4d565b500490565b600082821015611f8957611f89611ece565b500390565b600082611f9d57611f9d611f4d565b50069056fe68747470733a2f2f6e66742e62626e706f6c6c732e78797a2f6170692f6d6574612fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122098a785d20fd07ff6cc1e60bf5ae669cf40c3f7b3c5e2c124cc586722f9aebbf064736f6c63430008090033";

type ERC721AQueryableOwnersExplicitMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AQueryableOwnersExplicitMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721AQueryableOwnersExplicitMock__factory extends ContractFactory {
  constructor(...args: ERC721AQueryableOwnersExplicitMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721AQueryableOwnersExplicitMock> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ERC721AQueryableOwnersExplicitMock>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721AQueryableOwnersExplicitMock {
    return super.attach(address) as ERC721AQueryableOwnersExplicitMock;
  }
  override connect(
    signer: Signer
  ): ERC721AQueryableOwnersExplicitMock__factory {
    return super.connect(signer) as ERC721AQueryableOwnersExplicitMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AQueryableOwnersExplicitMockInterface {
    return new utils.Interface(
      _abi
    ) as ERC721AQueryableOwnersExplicitMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AQueryableOwnersExplicitMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721AQueryableOwnersExplicitMock;
  }
}
