/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721AGasReporterMock,
  ERC721AGasReporterMockInterface,
} from "../../../contracts/mocks/ERC721AGasReporterMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintOne",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintTen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "predictionOf",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMintOne",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMintTen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x69383932b234b1ba34b7b760b11b60a052600a60805260aa6040527f4b233c1d5eda54dd2330e1ce9ccbcdb1a9390a9bdab218af102142220baf833a6008553480156200004b57600080fd5b506040516200184b3803806200184b8339810160408190526200006e9162000220565b81518290829062000087906002906020850190620000ad565b5080516200009d906003906020840190620000ad565b506000805550620002c792505050565b828054620000bb906200028a565b90600052602060002090601f016020900481019282620000df57600085556200012a565b82601f10620000fa57805160ff19168380011785556200012a565b828001600101855582156200012a579182015b828111156200012a5782518255916020019190600101906200010d565b50620001389291506200013c565b5090565b5b808211156200013857600081556001016200013d565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200017b57600080fd5b81516001600160401b038082111562000198576200019862000153565b604051601f8301601f19908116603f01168101908282118183101715620001c357620001c362000153565b81604052838152602092508683858801011115620001e057600080fd5b600091505b83821015620002045785820183015181830184015290820190620001e5565b83821115620002165760008385830101525b9695505050505050565b600080604083850312156200023457600080fd5b82516001600160401b03808211156200024c57600080fd5b6200025a8683870162000169565b935060208501519150808211156200027157600080fd5b50620002808582860162000169565b9150509250929050565b600181811c908216806200029f57607f821691505b60208210811415620002c157634e487b7160e01b600052602260045260246000fd5b50919050565b61157480620002d76000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806395d89b41116100ad578063e8a3d48511610071578063e8a3d48514610277578063e985e9c51461027f578063ef9c0bec14610210578063f6fba19b146102bb578063fa695a971461026457600080fd5b806395d89b4114610223578063a22cb4651461022b578063b88d4fde1461023e578063c87b56dd14610251578063db6745f81461026457600080fd5b806323b872dd116100f457806323b872dd146101c457806342842e0e146101d75780636352211e146101ea57806370a08231146101fd57806381861f841461021057600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806318160ddd146101ae575b600080fd5b61014461013f36600461107f565b6102ce565b60405190151581526020015b60405180910390f35b610161610320565b60405161015091906110f4565b61018161017c366004611107565b6103b2565b6040516001600160a01b039091168152602001610150565b6101ac6101a736600461113c565b6103f6565b005b600154600054035b604051908152602001610150565b6101ac6101d2366004611166565b61047d565b6101ac6101e5366004611166565b610488565b6101816101f8366004611107565b6104a3565b6101b661020b3660046111a2565b6104b5565b6101ac61021e3660046111a2565b610504565b610161610515565b6101ac6102393660046111bd565b610524565b6101ac61024c36600461120f565b6105ba565b61016161025f366004611107565b610604565b6101ac6102723660046111a2565b61069b565b6101616106a9565b61014461028d3660046112eb565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6101b66102c9366004611107565b6106e9565b60006001600160e01b031982166380ac58cd60e01b14806102ff57506001600160e01b03198216635b5e139f60e01b145b8061031a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461032f9061131e565b80601f016020809104026020016040519081016040528092919081815260200182805461035b9061131e565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b5050505050905090565b60006103bd826106fe565b6103da576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b6000610401826104a3565b9050806001600160a01b0316836001600160a01b031614156104365760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b0382161461046d57610450813361028d565b61046d576040516367d9dca160e11b815260040160405180910390fd5b610478838383610729565b505050565b610478838383610785565b610478838383604051806020016040528060008152506105ba565b60006104ae82610997565b5192915050565b60006001600160a01b0382166104de576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b61051281600a600854610acc565b50565b60606003805461032f9061131e565b6001600160a01b03821633141561054e5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6105c5848484610785565b6001600160a01b0383163b156105fe576105e184848484610ae7565b6105fe576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606061060f826106fe565b61062c57604051630a14c4b560e41b815260040160405180910390fd5b6000610636610bde565b90506000610645306014610bfe565b90508151600014156106665760405180602001604052806000815250610693565b818161067186610da5565b60405160200161068393929190611359565b6040516020818303038152906040525b949350505050565b610512816001600854610acc565b606060006106b8306014610bfe565b90506106c2610bde565b816040516020016106d49291906113a9565b60405160208183030381529060405291505090565b60006106f482610997565b6060015192915050565b600080548210801561031a575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061079082610997565b60608101518151919250906001600160a01b038681169116146107c55760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b03871614806107e357506107e3863361028d565b806107fe5750336107f3856103b2565b6001600160a01b0316145b90508061081e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661084557604051633a954ecd60e21b815260040160405180910390fd5b61085160008588610729565b6001600160a01b038681166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255948a168085528285208054928316928716600101871692909217909155888452600490925290912080546001600160e01b0319168217600160a01b4290941693909302929092178255156108e857600181018390555b60018501600081815260046020526040902080546001600160a01b031661094b57600054821461094b578054602087015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038b1617178155600181018590555b50505083856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b60408051608081018252600080825260208201819052918101829052606081019190915281600054811015610ab357600081815260046020908152604091829020825160808101845281546001600160a01b0381168252600160a01b810467ffffffffffffffff1693820193909352600160e01b90920460ff16151592820183905260010154606082015290610ab15780516001600160a01b031615610a3e579392505050565b5060001901600081815260046020908152604091829020825160808101845281546001600160a01b038116808352600160a01b820467ffffffffffffffff1694830194909452600160e01b900460ff1615159381019390935260010154606083015215610aac579392505050565b610a3e565b505b604051636f96cda160e11b815260040160405180910390fd5b61047883838360405180602001604052806000815250610ea3565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610b1c9033908990889088906004016113d8565b602060405180830381600087803b158015610b3657600080fd5b505af1925050508015610b66575060408051601f3d908101601f19168201909252610b6391810190611415565b60015b610bc1573d808015610b94576040519150601f19603f3d011682016040523d82523d6000602084013e610b99565b606091505b508051610bb9576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060405180606001604052806022815260200161151d60229139905090565b60606000610c0d836002611448565b610c18906002611467565b67ffffffffffffffff811115610c3057610c306111f9565b6040519080825280601f01601f191660200182016040528015610c5a576020820181803683370190505b509050600360fc1b81600081518110610c7557610c7561147f565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610ca457610ca461147f565b60200101906001600160f81b031916908160001a9053506000610cc8846002611448565b610cd3906001611467565b90505b6001811115610d4b576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610d0757610d0761147f565b1a60f81b828281518110610d1d57610d1d61147f565b60200101906001600160f81b031916908160001a90535060049490941c93610d4481611495565b9050610cd6565b508315610d9e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b9392505050565b606081610dc95750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610df35780610ddd816114ac565b9150610dec9050600a836114dd565b9150610dcd565b60008167ffffffffffffffff811115610e0e57610e0e6111f9565b6040519080825280601f01601f191660200182016040528015610e38576020820181803683370190505b5090505b841561069357610e4d6001836114f1565b9150610e5a600a86611508565b610e65906030611467565b60f81b818381518110610e7a57610e7a61147f565b60200101906001600160f81b031916908160001a905350610e9c600a866114dd565b9450610e3c565b6000546001600160a01b038516610ecc57604051622e076360e81b815260040160405180910390fd5b83610eea5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038516600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168c0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168c01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b42909316929092029190911781556001018490558190818601903b15611019575b60405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4610fe26000888480600101955087610ae7565b610fff576040516368d2bf6b60e11b815260040160405180910390fd5b808210610f9757826000541461101457600080fd5b61105e565b5b6040516001830192906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a480821061101a575b506000555050505050565b6001600160e01b03198116811461051257600080fd5b60006020828403121561109157600080fd5b8135610d9e81611069565b60005b838110156110b757818101518382015260200161109f565b838111156105fe5750506000910152565b600081518084526110e081602086016020860161109c565b601f01601f19169290920160200192915050565b602081526000610d9e60208301846110c8565b60006020828403121561111957600080fd5b5035919050565b80356001600160a01b038116811461113757600080fd5b919050565b6000806040838503121561114f57600080fd5b61115883611120565b946020939093013593505050565b60008060006060848603121561117b57600080fd5b61118484611120565b925061119260208501611120565b9150604084013590509250925092565b6000602082840312156111b457600080fd5b610d9e82611120565b600080604083850312156111d057600080fd5b6111d983611120565b9150602083013580151581146111ee57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561122557600080fd5b61122e85611120565b935061123c60208601611120565b925060408501359150606085013567ffffffffffffffff8082111561126057600080fd5b818701915087601f83011261127457600080fd5b813581811115611286576112866111f9565b604051601f8201601f19908116603f011681019083821181831017156112ae576112ae6111f9565b816040528281528a60208487010111156112c757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156112fe57600080fd5b61130783611120565b915061131560208401611120565b90509250929050565b600181811c9082168061133257607f821691505b6020821081141561135357634e487b7160e01b600052602260045260246000fd5b50919050565b6000845161136b81846020890161109c565b84519083019061137f81836020890161109c565b602f60f81b9101908152835161139c81600184016020880161109c565b0160010195945050505050565b600083516113bb81846020880161109c565b8351908301906113cf81836020880161109c565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061140b908301846110c8565b9695505050505050565b60006020828403121561142757600080fd5b8151610d9e81611069565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561146257611462611432565b500290565b6000821982111561147a5761147a611432565b500190565b634e487b7160e01b600052603260045260246000fd5b6000816114a4576114a4611432565b506000190190565b60006000198214156114c0576114c0611432565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826114ec576114ec6114c7565b500490565b60008282101561150357611503611432565b500390565b600082611517576115176114c7565b50069056fe68747470733a2f2f6e66742e62626e706f6c6c732e78797a2f6170692f6d6574612fa264697066735822122019877097213e6918e81ccccba9c3b122d4dc41440433ac83feb9f3208d31d46064736f6c63430008090033";

type ERC721AGasReporterMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AGasReporterMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721AGasReporterMock__factory extends ContractFactory {
  constructor(...args: ERC721AGasReporterMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721AGasReporterMock> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ERC721AGasReporterMock>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721AGasReporterMock {
    return super.attach(address) as ERC721AGasReporterMock;
  }
  override connect(signer: Signer): ERC721AGasReporterMock__factory {
    return super.connect(signer) as ERC721AGasReporterMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AGasReporterMockInterface {
    return new utils.Interface(_abi) as ERC721AGasReporterMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AGasReporterMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721AGasReporterMock;
  }
}
