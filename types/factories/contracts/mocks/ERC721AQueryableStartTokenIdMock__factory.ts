/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721AQueryableStartTokenIdMock,
  ERC721AQueryableStartTokenIdMockInterface,
} from "../../../contracts/mocks/ERC721AQueryableStartTokenIdMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTokenId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQueryRange",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "explicitOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "prediction",
            type: "bytes32",
          },
        ],
        internalType: "struct INN.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "explicitOwnershipsOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "prediction",
            type: "bytes32",
          },
        ],
        internalType: "struct INN.TokenOwnership[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "predictionOf",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stop",
        type: "uint256",
      },
    ],
    name: "tokensOfOwnerIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200214838038062002148833981016040819052620000349162000228565b60008190558251839083908290829062000056906003906020850190620000b5565b5080516200006c906004906020840190620000b5565b50600054600155505060405169383932b234b1ba34b7b760b11b6020820152602a01604051602081830303815290604052805190602001206009819055505050505050620002d8565b828054620000c3906200029b565b90600052602060002090601f016020900481019282620000e7576000855562000132565b82601f106200010257805160ff191683800117855562000132565b8280016001018555821562000132579182015b828111156200013257825182559160200191906001019062000115565b506200014092915062000144565b5090565b5b8082111562000140576000815560010162000145565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200018357600080fd5b81516001600160401b0380821115620001a057620001a06200015b565b604051601f8301601f19908116603f01168101908282118183101715620001cb57620001cb6200015b565b81604052838152602092508683858801011115620001e857600080fd5b600091505b838210156200020c5785820183015181830184015290820190620001ed565b838211156200021e5760008385830101525b9695505050505050565b6000806000606084860312156200023e57600080fd5b83516001600160401b03808211156200025657600080fd5b620002648783880162000171565b945060208601519150808211156200027b57600080fd5b506200028a8682870162000171565b925050604084015190509250925092565b600181811c90821680620002b057607f821691505b60208210811415620002d257634e487b7160e01b600052602260045260246000fd5b50919050565b611e6080620002e86000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80638462151c116100c3578063c23dc68f1161007c578063c23dc68f146102dc578063c87b56dd146102fc578063e6798baa1461030f578063e8a3d48514610318578063e985e9c514610320578063f6fba19b1461033357600080fd5b80638462151c1461026857806395d89b411461028857806399a2557a14610290578063a1448194146102a3578063a22cb465146102b6578063b88d4fde146102c957600080fd5b806323b872dd1161011557806323b872dd146101e957806342842e0e146101fc57806342966c681461020f5780635bbb2177146102225780636352211e1461024257806370a082311461025557600080fd5b806301ffc9a71461015257806306fdde031461017a578063081812fc1461018f578063095ea7b3146101ba57806318160ddd146101cf575b600080fd5b6101656101603660046117a1565b610346565b60405190151581526020015b60405180910390f35b610182610398565b6040516101719190611816565b6101a261019d366004611829565b61042a565b6040516001600160a01b039091168152602001610171565b6101cd6101c836600461185e565b61046e565b005b60005460025460015403035b604051908152602001610171565b6101cd6101f7366004611888565b6104f5565b6101cd61020a366004611888565b610500565b6101cd61021d366004611829565b61051b565b61023561023036600461190a565b610529565b60405161017191906119e6565b6101a2610250366004611829565b6105f6565b6101db610263366004611a28565b610608565b61027b610276366004611a28565b610656565b6040516101719190611a43565b6101826107b4565b61027b61029e366004611a7b565b6107c3565b6101cd6102b136600461185e565b61099c565b6101cd6102c4366004611aae565b6109ad565b6101cd6102d7366004611aea565b610a43565b6102ef6102ea366004611829565b610a8d565b6040516101719190611ba9565b61018261030a366004611829565b610b64565b6101db60005481565b610182610bfb565b61016561032e366004611bb7565b610c3b565b6101db610341366004611829565b610c69565b60006001600160e01b031982166380ac58cd60e01b148061037757506001600160e01b03198216635b5e139f60e01b145b8061039257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600380546103a790611bea565b80601f01602080910402602001604051908101604052809291908181526020018280546103d390611bea565b80156104205780601f106103f557610100808354040283529160200191610420565b820191906000526020600020905b81548152906001019060200180831161040357829003601f168201915b5050505050905090565b600061043582610c7e565b610452576040516333d1c03960e21b815260040160405180910390fd5b506000908152600760205260409020546001600160a01b031690565b6000610479826105f6565b9050806001600160a01b0316836001600160a01b031614156104ae5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216146104e5576104c88133610c3b565b6104e5576040516367d9dca160e11b815260040160405180910390fd5b6104f0838383610cbe565b505050565b6104f0838383610d1a565b6104f083838360405180602001604052806000815250610a43565b610526816001610f18565b50565b80516060906000816001600160401b03811115610548576105486118c4565b60405190808252806020026020018201604052801561059a57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816105665790505b50905060005b8281146105ee576105c98582815181106105bc576105bc611c25565b6020026020010151610a8d565b8282815181106105db576105db611c25565b60209081029190910101526001016105a0565b509392505050565b6000610601826110da565b5192915050565b60006001600160a01b038216610631576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600660205260409020546001600160401b031690565b6060600080600061066685610608565b90506000816001600160401b03811115610682576106826118c4565b6040519080825280602002602001820160405280156106ab578160200160208202803683370190505b5090506106d860408051608081018252600080825260208201819052918101829052606081019190915290565b6000545b8386146107a857600081815260056020908152604091829020825160808101845281546001600160a01b0381168252600160a01b81046001600160401b031693820193909352600160e01b90920460ff1615801593830193909352600101546060820152925061074b576107a0565b81516001600160a01b03161561076057815194505b876001600160a01b0316856001600160a01b031614156107a0578083878060010198508151811061079357610793611c25565b6020026020010181815250505b6001016106dc565b50909695505050505050565b6060600480546103a790611bea565b60608183106107e557604051631960ccad60e11b815260040160405180910390fd5b6001546000906107f460005490565b8510156108015760005494505b8084111561080d578093505b600061081887610608565b9050848610156108375785850381811015610831578091505b5061083b565b5060005b6000816001600160401b03811115610855576108556118c4565b60405190808252806020026020018201604052801561087e578160200160208202803683370190505b5090508161089157935061099592505050565b600061089c88610a8d565b9050600081604001516108ad575080515b885b8881141580156108bf5750848714155b1561098957600081815260056020908152604091829020825160808101845281546001600160a01b0381168252600160a01b81046001600160401b031693820193909352600160e01b90920460ff1615801593830193909352600101546060820152935061092c57610981565b82516001600160a01b03161561094157825191505b8a6001600160a01b0316826001600160a01b03161415610981578084888060010199508151811061097457610974611c25565b6020026020010181815250505b6001016108af565b50505092835250909150505b9392505050565b6109a9828260095461121c565b5050565b6001600160a01b0382163314156109d75760405163b06307db60e01b815260040160405180910390fd5b3360008181526008602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610a4e848484610d1a565b6001600160a01b0383163b15610a8757610a6a84848484611237565b610a87576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b604080516080810182526000808252602082018190529181018290526060810191909152604080516080810182526000808252602082018190529181018290526060810191909152600054831080610ae757506001548310155b15610af25792915050565b50600082815260056020908152604091829020825160808101845281546001600160a01b0381168252600160a01b81046001600160401b031693820193909352600160e01b90920460ff161580159383019390935260010154606082015290610b5b5792915050565b610995836110da565b6060610b6f82610c7e565b610b8c57604051630a14c4b560e41b815260040160405180910390fd5b6000610b9661132e565b90506000610ba530601461134e565b9050815160001415610bc65760405180602001604052806000815250610bf3565b8181610bd1866114ed565b604051602001610be393929190611c3b565b6040516020818303038152906040525b949350505050565b60606000610c0a30601461134e565b9050610c1461132e565b81604051602001610c26929190611c8b565b60405160208183030381529060405291505090565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205460ff1690565b6000610c74826110da565b6060015192915050565b600081610c8a60005490565b11158015610c99575060015482105b8015610392575050600090815260056020526040902054600160e01b900460ff161590565b60008281526007602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000610d25826110da565b60608101518151919250906001600160a01b03868116911614610d5a5760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0387161480610d785750610d788633610c3b565b80610d93575033610d888561042a565b6001600160a01b0316145b905080610db357604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610dda57604051633a954ecd60e21b815260040160405180910390fd5b610de660008588610cbe565b6001600160a01b038681166000908152600660209081526040808320805467ffffffffffffffff198082166001600160401b0392831660001901831617909255948a168085528285208054928316928716600101871692909217909155888452600590925290912080546001600160e01b0319168217600160a01b429094169390930292909217825515610e7c57600181018390555b60018501600081815260056020526040902080546001600160a01b0316610ede576001548214610ede57805460208701516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038b1617178155600181018590555b50505083856001600160a01b0316876001600160a01b0316600080516020611e0b83398151915260405160405180910390a4505050505050565b6000610f23836110da565b60608101518151919250908315610f8f576000336001600160a01b0383161480610f525750610f528233610c3b565b80610f6d575033610f628761042a565b6001600160a01b0316145b905080610f8d57604051632ce44b5f60e11b815260040160405180910390fd5b505b610f9b60008683610cbe565b6001600160a01b0380821660008181526006602090815260408083208054600160801b6000196001600160401b0380841691909101811667ffffffffffffffff198416811783900482166001908101831690930277ffffffffffffffff0000000000000000ffffffffffffffff19909416179290921783558c86526005909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918a018084529220805491949091166110a05760015482146110a057805460208801516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b03871617178155600181018690555b5050604051879250600091506001600160a01b03841690600080516020611e0b833981519152908390a45050600280546001019055505050565b604080516080810182526000808252602082018190529181018290526060810191909152818061110960005490565b116112035760015481101561120357600081815260056020908152604091829020825160808101845281546001600160a01b0381168252600160a01b81046001600160401b031693820193909352600160e01b90920460ff161515928201839052600101546060820152906112015780516001600160a01b03161561118f579392505050565b5060001901600081815260056020908152604091829020825160808101845281546001600160a01b038116808352600160a01b82046001600160401b031694830194909452600160e01b900460ff16151593810193909352600101546060830152156111fc579392505050565b61118f565b505b604051636f96cda160e11b815260040160405180910390fd5b6104f0838383604051806020016040528060008152506115ea565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061126c903390899088908890600401611cba565b602060405180830381600087803b15801561128657600080fd5b505af19250505080156112b6575060408051601f3d908101601f191682019092526112b391810190611cf7565b60015b611311573d8080156112e4576040519150601f19603f3d011682016040523d82523d6000602084013e6112e9565b606091505b508051611309576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b6060604051806060016040528060228152602001611de960229139905090565b6060600061135d836002611d2a565b611368906002611d49565b6001600160401b0381111561137f5761137f6118c4565b6040519080825280601f01601f1916602001820160405280156113a9576020820181803683370190505b509050600360fc1b816000815181106113c4576113c4611c25565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106113f3576113f3611c25565b60200101906001600160f81b031916908160001a9053506000611417846002611d2a565b611422906001611d49565b90505b600181111561149a576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061145657611456611c25565b1a60f81b82828151811061146c5761146c611c25565b60200101906001600160f81b031916908160001a90535060049490941c9361149381611d61565b9050611425565b5083156109955760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b6060816115115750506040805180820190915260018152600360fc1b602082015290565b8160005b811561153b578061152581611d78565b91506115349050600a83611da9565b9150611515565b6000816001600160401b03811115611555576115556118c4565b6040519080825280601f01601f19166020018201604052801561157f576020820181803683370190505b5090505b8415610bf357611594600183611dbd565b91506115a1600a86611dd4565b6115ac906030611d49565b60f81b8183815181106115c1576115c1611c25565b60200101906001600160f81b031916908160001a9053506115e3600a86611da9565b9450611583565b6001546001600160a01b03851661161357604051622e076360e81b815260040160405180910390fd5b836116315760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038516600081815260066020908152604080832080546fffffffffffffffffffffffffffffffff1981166001600160401b038083168c0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168c01811690920217909155858452600590925290912080546001600160e01b0319168317600160a01b42909316929092029190911781556001018490558190818601903b1561174d575b60405182906001600160a01b03891690600090600080516020611e0b833981519152908290a46117166000888480600101955087611237565b611733576040516368d2bf6b60e11b815260040160405180910390fd5b8082106116dd57826001541461174857600080fd5b611780565b5b6040516001830192906001600160a01b03891690600090600080516020611e0b833981519152908290a480821061174e575b506001555050505050565b6001600160e01b03198116811461052657600080fd5b6000602082840312156117b357600080fd5b81356109958161178b565b60005b838110156117d95781810151838201526020016117c1565b83811115610a875750506000910152565b600081518084526118028160208601602086016117be565b601f01601f19169290920160200192915050565b60208152600061099560208301846117ea565b60006020828403121561183b57600080fd5b5035919050565b80356001600160a01b038116811461185957600080fd5b919050565b6000806040838503121561187157600080fd5b61187a83611842565b946020939093013593505050565b60008060006060848603121561189d57600080fd5b6118a684611842565b92506118b460208501611842565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611902576119026118c4565b604052919050565b6000602080838503121561191d57600080fd5b82356001600160401b038082111561193457600080fd5b818501915085601f83011261194857600080fd5b81358181111561195a5761195a6118c4565b8060051b915061196b8483016118da565b818152918301840191848101908884111561198557600080fd5b938501935b838510156119a35784358252938501939085019061198a565b98975050505050505050565b80516001600160a01b031682526020808201516001600160401b031690830152604080820151151590830152606090810151910152565b6020808252825182820181905260009190848201906040850190845b818110156107a857611a158385516119af565b9284019260809290920191600101611a02565b600060208284031215611a3a57600080fd5b61099582611842565b6020808252825182820181905260009190848201906040850190845b818110156107a857835183529284019291840191600101611a5f565b600080600060608486031215611a9057600080fd5b611a9984611842565b95602085013595506040909401359392505050565b60008060408385031215611ac157600080fd5b611aca83611842565b915060208301358015158114611adf57600080fd5b809150509250929050565b60008060008060808587031215611b0057600080fd5b611b0985611842565b93506020611b18818701611842565b93506040860135925060608601356001600160401b0380821115611b3b57600080fd5b818801915088601f830112611b4f57600080fd5b813581811115611b6157611b616118c4565b611b73601f8201601f191685016118da565b91508082528984828501011115611b8957600080fd5b808484018584013760008482840101525080935050505092959194509250565b6080810161039282846119af565b60008060408385031215611bca57600080fd5b611bd383611842565b9150611be160208401611842565b90509250929050565b600181811c90821680611bfe57607f821691505b60208210811415611c1f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60008451611c4d8184602089016117be565b845190830190611c618183602089016117be565b602f60f81b91019081528351611c7e8160018401602088016117be565b0160010195945050505050565b60008351611c9d8184602088016117be565b835190830190611cb18183602088016117be565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611ced908301846117ea565b9695505050505050565b600060208284031215611d0957600080fd5b81516109958161178b565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611d4457611d44611d14565b500290565b60008219821115611d5c57611d5c611d14565b500190565b600081611d7057611d70611d14565b506000190190565b6000600019821415611d8c57611d8c611d14565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611db857611db8611d93565b500490565b600082821015611dcf57611dcf611d14565b500390565b600082611de357611de3611d93565b50069056fe68747470733a2f2f6e66742e62626e706f6c6c732e78797a2f6170692f6d6574612fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220e5f5f17c05e28c44a4c6d3399d79d94e6657299f0f894bc273fca45c26f44c6b64736f6c63430008090033";

type ERC721AQueryableStartTokenIdMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AQueryableStartTokenIdMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721AQueryableStartTokenIdMock__factory extends ContractFactory {
  constructor(...args: ERC721AQueryableStartTokenIdMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    startTokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721AQueryableStartTokenIdMock> {
    return super.deploy(
      name_,
      symbol_,
      startTokenId_,
      overrides || {}
    ) as Promise<ERC721AQueryableStartTokenIdMock>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    startTokenId_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      startTokenId_,
      overrides || {}
    );
  }
  override attach(address: string): ERC721AQueryableStartTokenIdMock {
    return super.attach(address) as ERC721AQueryableStartTokenIdMock;
  }
  override connect(signer: Signer): ERC721AQueryableStartTokenIdMock__factory {
    return super.connect(signer) as ERC721AQueryableStartTokenIdMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AQueryableStartTokenIdMockInterface {
    return new utils.Interface(
      _abi
    ) as ERC721AQueryableStartTokenIdMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AQueryableStartTokenIdMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721AQueryableStartTokenIdMock;
  }
}
